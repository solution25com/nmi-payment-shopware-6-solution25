(()=>{"use strict";class e{static loadCollectJS(e,t,r){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if("undefined"==typeof CollectJS){let n=document.createElement("script");n.src=e,n.setAttribute("data-tokenization-key","jygC3z-8XkphM-JEBByn-6JTRdC"),document.head.appendChild(n),n.onload=()=>{CollectJS.configure({paymentType:r,callback:t,...a})},n.onerror=()=>{console.error("Failed to load CollectJS.")}}else CollectJS.configure({paymentType:r,callback:t,...a})}}class t{static loadGatewayJS(e){let t=document.createElement("script");t.src=e,document.head.appendChild(t),t.onerror=()=>{console.error("Failed to load Gateway.js.")}}static createGateway(e){return"undefined"==typeof Gateway?(console.error("Gateway SDK is not loaded"),null):Gateway.create(e)}}class r{static submitPayment(e,t){return fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)}).then(async e=>{if(!e.ok){let t=await e.json().catch(()=>null);throw Error((null==t?void 0:t.message)||"Payment submission failed with an unknown error")}return e.json()}).catch(e=>{throw console.error("Error during payment submission:",e),e})}static fetchCustomerData(e,t){return fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)}).then(async e=>{if(!e.ok){let t=await e.json().catch(()=>null);throw Error((null==t?void 0:t.message)||"Failed to fetch customer data due to an unknown error")}return e.json()}).catch(e=>{throw console.error("Error fetching customer data:",e),e})}static addBillingToCustomerData(e,t){return fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)}).then(async e=>{if(!e.ok){let t=await e.json().catch(()=>null);throw Error((null==t?void 0:t.message)||"Failed to add customer billing data ")}return e.json()}).catch(e=>{throw console.error("Error adding customer billing data:",e),e})}}class a extends window.PluginBaseClass{init(){this._registerElements(),this._registerEvents(),this.isSavedCardBackend&&(this.getVaultedCustomerData(),this.fillDropdown())}_registerElements(){this.parentCreditCardWrapper=document.getElementById(this.options.parentCreditCardWrapperId),this.configs=JSON.parse(this.parentCreditCardWrapper.getAttribute("data-configs")),this.vaultedId=this.parentCreditCardWrapper.getAttribute("data-vaulted-customer-id"),this.billingId=this.parentCreditCardWrapper.getAttribute("data-billing-customer-id"),this.isSavedCardBackend=this.parentCreditCardWrapper.getAttribute("data-saved-card"),this.currency=this.parentCreditCardWrapper.getAttribute("data-shop-currency"),this.amount=this.parentCreditCardWrapper.getAttribute("data-amount"),this.threeDSConfig=this.parentCreditCardWrapper.getAttribute("data-threeDSConfig"),this.dropdownCards=this.parentCreditCardWrapper.getAttribute("data-dropdown-cards"),this.deleteDataBtn=document.getElementById("delete-vaulted-customer-data"),this.addMoreCards=document.getElementById("add-another-vaulted-card"),this.loader=document.getElementById("nmiLoader"),this.cardHolderFirstName=document.getElementById("card-holder-first-name"),this.cardHolderLastName=document.getElementById("card-holder-last-name"),this.confirmOrderForm=document.forms[this.options.confirmFormId]}_registerEvents(){this.confirmOrderForm.addEventListener("submit",this._onPayButtonClick.bind(this)),this.deleteDataBtn&&this.deleteDataBtn.addEventListener("click",this._onDeleteButtonClick.bind(this)),this.addMoreCards&&this.addMoreCards.addEventListener("click",this._onAddCardButtonClick.bind(this))}async _onPayButtonClick(t){t.preventDefault(),e.loadCollectJS(this.options.collectJsUrl,this.submitPayment.bind(this),this.options.paymentType,{}),this.confirmOrderForm.checkValidity()&&(this.isSavedCardBackend?this.submitVaultedPayment():"undefined"!=typeof CollectJS&&CollectJS.startPaymentRequest())}_onDeleteButtonClick(e){e.preventDefault(),this._showLoading(!0),this.deleteVaultedCustomerData()}async _onAddCardButtonClick(t){t.preventDefault(),e.loadCollectJS(this.options.collectJsUrl,this.addBillingToCustomer.bind(this),this.options.paymentType,{theme:"bootstrap",primaryColor:"#ff288d",secondaryColor:"#3e79db",buttonText:"Add New Credit Card"}),this.confirmOrderForm.checkValidity()&&"undefined"!=typeof CollectJS&&CollectJS.startPaymentRequest()}_showLoading(e){let t=document.getElementById("nmiLoader");t&&(t.style.display=e?"inline-block":"none")}submitPayment(e){if(!e.token){console.error("Tokenization failed:",e.error),console.error("Payment tokenization failed. Please try again.");return}this.isSavedCardBackend?(this.submitVaultedPayment(e),this._showLoading(!1)):this.submitNormalPayment(e)}addBillingToCustomer(e){if(!e.token){console.error("Tokenization failed:",e.error),console.error("Payment tokenization failed. Please try again.");return}this.addCards(e)}addCards(e){let t={token:e.token,ccnumber:e.card.number,ccexp:e.card.exp,card_type:e.card.type,vaulted_customer_id:this.vaultedId,first_name:"Test",last_name:"Test"};this.submitCard(this.options.paymentUrls.addCard,t)}deleteVaultedCustomerData(){let e={customer_vault_id:this.vaultedId},t=this.options.paymentUrls.deleteVaultedCustomerData;r.fetchCustomerData(t,e).then(()=>{this._showLoading(!1),window.location.reload()}).catch(e=>{console.error("Error deleting vaulted customer data:",e),this._showLoading(!1)})}getVaultedCustomerData(){let e={customer_vault_id:this.vaultedId},t=this.options.paymentUrls.getVaultedData;this._showLoading(!0),r.fetchCustomerData(t,e).then(e=>{this.displayVaultedCustomerData(e),this._showLoading(!1)}).catch(e=>{console.error("Error fetching vaulted customer data:",e),this._showLoading(!1)})}fillDropdown(){let e=JSON.parse(this.dropdownCards);var t=document.getElementById("cardSelect");if(e.length>0)e.forEach(function(e){var r=document.createElement("option");r.value=e.vaultedCustomerId,r.value=e.billingId,r.textContent="".concat(e.firstName," ****").concat(e.lastDigits.slice(-4)),e.isDefault&&(r.selected=!0),t.appendChild(r)});else{var r=document.createElement("option");r.value="",r.textContent="No saved cards available",t.appendChild(r)}}displayVaultedCustomerData(e){e&&e.first_name&&e.last_name&&e.cc_number&&e.cc_type?(document.getElementById("vaulted-first-name").innerText=e.first_name,document.getElementById("vaulted-last-name").innerText=e.last_name,document.getElementById("vaulted-last-four-digits").innerText=e.cc_number,document.getElementById("vaulted-card-type").innerText=e.cc_type):console.error("Vaulted customer data is incomplete or missing.")}submitNormalPayment(e){let r,a;let n=this.threeDSConfig,o={token:e.token,amount:this.amount,first_name:document.querySelector('input[name="fname"]').value,last_name:document.querySelector('input[name="lname"]').value,address1:document.querySelector('input[name="address1"]').value,city:document.querySelector('input[name="city"]').value,zip:document.querySelector('input[name="zip"]').value,ccnumber:e.card.number,ccexp:e.card.exp,card_type:e.card.type,customer_vault:document.querySelector("#saveCardCheckbox")&&document.querySelector("#saveCardCheckbox").checked?"add_customer":null,saveCard:!!document.querySelector("#saveCardCheckbox")&&document.querySelector("#saveCardCheckbox").checked};if(n){let n=document.createElement("script");n.src=this.options.gatewayJsUrl,document.head.appendChild(n),n.onload=()=>{try{if(!(r=t.createGateway(this.configs.checkoutKey))){console.error("Gateway initialization failed."),this.displayErrors(["Payment service is currently unavailable."]);return}if(!(a=r.get3DSecure())){console.error("3DSecure is not available."),this.displayErrors(["3D Secure is not available for your payment method."]);return}o.cavv=e.cavv,o.xid=e.xid,o.eci=e.eci,o.cardHolderAuth=e.cardHolderAuth,o.threeDsVersion=e.threeDsVersion,o.directoryServerId=e.directoryServerId,o.cardHolderInfo=e.cardHolderInfo;let n=a.createUI(o);n.start("body"),n.on("failure",function(e){console.warn(e)}),r.on("error",function(e){console.error(e)}),this.submitToPaymentService(this.options.paymentUrls.creditCard,o)}catch(e){console.error("3DSecure start failed:",e),this.displayErrors(["Your merchant account does not support 3D Secure payments."])}},n.onerror=()=>{console.error("Failed to load Gateway.js."),this.displayErrors(["Could not load secure payment service."])}}else this.submitToPaymentService(this.options.paymentUrls.creditCard,o)}submitVaultedPayment(){this._showLoading(!0);let e=document.getElementById("cardSelect"),t=e?e.value:null,r={amount:this.amount,customer_vault_id:this.vaultedId,billing_id:null!=t?t:null},a=this.options.paymentUrls.vaulted;this.submitToPaymentService(a,r,!0)}displayErrors(e){let t=document.getElementById("error-message"),r=t.querySelector(".error-alert");r.innerHTML="",e.length>0?(r.textContent=e.join(" "),t.classList.remove("d-none"),t.classList.add("d-block")):(t.classList.add("d-none"),t.classList.remove("d-block"))}submitToPaymentService(e,t){r.submitPayment(e,t).then(e=>{if(e.success){let t=e.responses.payment.transaction_id,r=e.responses.payment.isSubscriptionCart;t&&(document.getElementById("nmi-transaction-id").value=null!=t?t:null,document.getElementById("nmi-is-subscription").value=null!=r?r:null),document.getElementById("confirmOrderForm").submit()}else{let t=e.errors||[e.message||"An unknown error occurred"];this.displayErrors(t)}}).catch(e=>{console.error("Error submitting payment:",e),this.displayErrors([e.message||"Unexpected error occurred. Please try again later."])})}submitCard(e,t){r.addBillingToCustomerData(e,t).then(e=>{if(e.success);else{let t=e.errors||[e.message||"An unknown error occurred"];this.displayErrors(t)}}).catch(e=>{console.error("Error submitting payment:",e),this.displayErrors([e.message||"Unexpected error occurred. Please try again later."])})}}a.options={confirmFormId:"confirmOrderForm",formSelector:".lightbox-container",paymentUrls:{creditCard:"/nmi-payment-credit-card",vaulted:"/nmi-payment-vaulted-customer",getVaultedData:"/nmi-payment-get-vaulted-customer",deleteVaultedCustomerData:"/nmi-payment-delete-vaulted-customer",addCard:"/nmi-add-card"},collectJsUrl:"https://secure.nmi.com/token/Collect.js",gatewayJsUrl:"https://secure.nmi.com/js/v1/Gateway.js",paymentType:"cc",parentCreditCardWrapperId:"nmi-credit-card"};class n extends window.PluginBaseClass{init(){this._registerElements(),this._registerEvents()}_registerElements(){this.parentCreditCardWrapper=document.getElementById(this.options.parentCreditCardWrapperId),this.amount=this.parentCreditCardWrapper.getAttribute("data-amount"),this.confirmOrderForm=document.forms[this.options.confirmFormId]}_registerEvents(){this.confirmOrderForm.addEventListener("submit",this._onPayButtonClick.bind(this))}async _onPayButtonClick(t){t.preventDefault(),e.loadCollectJS(this.options.collectJsUrl,this.submitPayment.bind(this),this.options.paymentType),this.confirmOrderForm.checkValidity()&&("undefined"!=typeof CollectJS?CollectJS.startPaymentRequest():console.error("CollectJS is not available"))}submitPayment(e){if(!e||!e.token){console.error("Tokenization failed:",e?e.error:"No response"),console.error("Payment tokenization failed. Please try again.");return}this.submitaCheck(e)}submitaCheck(e){if(!e||!e.token){console.error("Tokenization failed:",e?e.error:"No response"),console.error("Payment tokenization failed. Please try again.");return}let t={token:e.token,amount:this.amount,checkname:e.check.name,checkaba:e.check.aba,checkaccount:e.check.account};this.submitToPaymentService(this.options.paymentUrl,t)}submitToPaymentService(e,t){r.submitPayment(e,t).then(e=>{e.success?(document.getElementById("nmi-transaction-id").value=JSON.parse(e.transaction_id),console.error("Payment success: ".concat(e.message)),document.getElementById("confirmOrderForm").submit()):console.error("Payment failed: ".concat(e.message))}).catch(e=>{console.error("Error submitting payment: "+e)})}}n.options={confirmFormId:"confirmOrderForm",paymentUrl:"/nmi-payment-ach-e-check",collectJsUrl:"https://secure.nmi.com/token/Collect.js",paymentType:"ck",parentCreditCardWrapperId:"nmi-ach-echeck"};let o=window.PluginManager;o.register("NmiCreditCardPlugin",a,"[nmi-payment-credit-card-plugin]"),o.register("NmiAchEcheckPlugin",n,"[nmi-payment-ach-eCheck-plugin]")})();